import os
from google.oauth2.service_account import Credentials
from googleapiclient.discovery import build
import pandas as pd
from datetime import datetime

# –ü—É—Ç—å –∫ –ø–æ–¥–ø–∞–ø–∫–µ BIG_DATA –≤–Ω—É—Ç—Ä–∏ –ø—Ä–æ–µ–∫—Ç–∞
BIG_DATA_PATH = "./data/BIG_DATA"

# –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
os.makedirs(BIG_DATA_PATH, exist_ok=True)

# Google Drive Folder ID (–í–ê–ñ–ù–û: –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –ø–∞–ø–∫–∏ CAEC_API_Data)
GOOGLE_DRIVE_FOLDER_ID = "1g1OtN7ID1lM01d0bLswGqLF0m2gQIcqo"

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É ClientData.xlsx
CLIENT_DATA_FILE = os.path.join(BIG_DATA_PATH, "ClientData.xlsx")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ClientData.xlsx
def initialize_client_data():
    if not os.path.exists(CLIENT_DATA_FILE):
        columns = ["Client Code", "Name", "Phone", "Email", "Created Date", "Last Visit", "Activity Status"]
        df = pd.DataFrame(columns=columns)
        df.to_excel(CLIENT_DATA_FILE, index=False)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Drive API
def get_drive_service():
    credentials = Credentials.from_service_account_file(os.getenv("GOOGLE_APPLICATION_CREDENTIALS"))
    return build('drive', 'v3', credentials=credentials)

# –ó–∞–≥—Ä—É–∑–∫–∞ ClientData.xlsx
def load_client_data():
    try:
        return pd.read_excel(CLIENT_DATA_FILE)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        initialize_client_data()
        return pd.DataFrame(columns=["Client Code", "Name", "Phone", "Email", "Created Date", "Last Visit", "Activity Status"])

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–ª–∏–µ–Ω—Ç–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –≤ Google Drive
def create_client_file(client_code, client_data):
    client_file_path = os.path.join(BIG_DATA_PATH, f"{client_code}.xlsx")

    if not os.path.exists(client_file_path):
        columns = ["Date", "Message", "Interests", "Requests", "Registration Date", "Last Visit"]
        df = pd.DataFrame(columns=columns)

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É
        df = df.append({
            "Date": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "Message": "–ö–ª–∏–µ–Ω—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω",
            "Interests": "",
            "Requests": "",
            "Registration Date": client_data["Created Date"],
            "Last Visit": client_data["Last Visit"]
        }, ignore_index=True)

        df.to_excel(client_file_path, index=False)
        print(f"üìÅ –§–∞–π–ª –∫–ª–∏–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞–Ω: {client_file_path}")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ Google Drive
        upload_file_to_drive(client_file_path, client_code)

    else:
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–∏–∑–∏—Ç–∞
        df = pd.read_excel(client_file_path)
        df.loc[df.index[-1], "Last Visit"] = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        df.to_excel(client_file_path, index=False)
        print(f"‚úÖ –§–∞–π–ª –∫–ª–∏–µ–Ω—Ç–∞ –æ–±–Ω–æ–≤–ª—ë–Ω: {client_file_path}")

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –∫–ª–∏–µ–Ω—Ç–∞ –≤ Google Drive
def upload_file_to_drive(file_path, client_code):
    service = get_drive_service()

    file_metadata = {
        "name": f"{client_code}.xlsx",
        "parents": [GOOGLE_DRIVE_FOLDER_ID],
        "mimeType": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    }

    media = {"name": file_path, "mimeType": "application/vnd.ms-excel"}
    
    try:
        uploaded_file = service.files().create(body=file_metadata, media_body=file_path, fields="id").execute()
        print(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Google Drive: {uploaded_file.get('id')}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Google Drive: {e}")

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ –∫–ª–∏–µ–Ω—Ç–∞
def generate_unique_code():
    existing_codes = set(load_client_data()["Client Code"])
    while True:
        code = f"CAEC{str(datetime.now().timestamp()).replace('.', '')[-7:]}"
        if code not in existing_codes:
            return code

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
def register_or_update_client(data):
    initialize_client_data()
    df = load_client_data()

    email = data.get("email")
    phone = data.get("phone")
    name = data.get("name", "Unknown")

    existing_client = df[(df["Email"] == email) | (df["Phone"] == phone)]

    if not existing_client.empty:
        client_code = existing_client.iloc[0]["Client Code"]
        df.loc[df["Client Code"] == client_code, "Last Visit"] = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        save_client_data(client_code, name, phone, email)
        return {
            "uniqueCode": client_code,
            "message": f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ, {name}! –í–∞—à –∫–æ–¥: {client_code}.",
        }

    client_code = generate_unique_code()
    new_client = {
        "Client Code": client_code,
        "Name": name,
        "Phone": phone,
        "Email": email,
        "Created Date": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "Last Visit": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "Activity Status": "Active"
    }
    df = pd.concat([df, pd.DataFrame([new_client])], ignore_index=True)
    save_client_data(client_code, name, phone, email)

    # –°–æ–∑–¥–∞—ë–º —Ñ–∞–π–ª –∫–ª–∏–µ–Ω—Ç–∞ –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ Google Drive
    create_client_file(client_code, new_client)

    return {
        "uniqueCode": client_code,
        "message": f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {name}! –í–∞—à –∫–æ–¥: {client_code}.",
    }

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
initialize_client_data()
